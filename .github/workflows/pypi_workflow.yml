# GitHub / PyPI integration
#
# This workflow will build a Python package, publish it to Test PyPI for pre-releases,
# and publish it to PyPI for releases.

name: PyPI workflow

on:
  release:
    # This workflow will run when a new release is published
    types: [released, prereleased]

permissions:
  id-token: write
  contents: read

jobs:

    test_build_and_publish_to_pypi:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.10
          uses: actions/setup-python@v5
          with:
            python-version: '3.10'

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip  # Upgrade pip
            
            python -m pip install flake8 pytest pandas numpy  # Install flake8, pytest, pandas, and numpy
            
            # Install chirp from the same location as called out in the pyproject.toml file
            python -m pip install "chirp @ git+https://github.com/kk7ds/chirp.git@master"  
            
            # Install dependencies from pyproject.toml
            pip install poetry
            poetry install

        - name: Set PYTHONPATH
          run: echo "PYTHONPATH=$(pwd)/src:$(pwd)/tests" >> $GITHUB_ENV
        - name: Lint with flake8
          run: |
              # stop the build if there are Python syntax errors or undefined names
              flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
              # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
              flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        

        - name: Test with pytest
          run: |
              cd tests
              echo
              pytest

        - name: Build
          run: |
            python -m build

        - name: Set twine env
          id: setenv
          env:
            TWINE_USERNAME: __token__
            IsPrerelease: ${{ github.event.release.prerelease == true && 'This is prerelease' || 'This is not prerelease' }}
            TWINE_PASSWORD: ${{ github.event.release.prerelease == true && secrets.TEST_PYPI_API_TOKEN || secrets.PYPI_API_TOKEN }}
          run: |
            echo $IsPrerelease
            echo ${{ github.event.release.prerelease }}
            echo "TWINE_PASSWORD hash ="
            echo -n $TWINE_PASSWORD | sha256sum
            echo "TEST_PYPI_API_TOKEN hash ="
            echo -n ${{ secrets.TEST_PYPI_API_TOKEN }} | sha256sum
            echo "PYPI_API_TOKEN hash ="
            echo -n ${{ secrets.PYPI_API_TOKEN }} | sha256sum
            

        - name: Publish to PyPI
          id: publish_to_pypi
          run: |
            echo ${{ github.event.release.prerelease }}
            echo ${{ github.event.release.isPrerelease }}
            
            if [[ ${{ github.event.release.prerelease }} == true ]]; then
              echo "This is a pre-release. Publishing to Test PyPI with $TWINE_PASSWORD"
              python -m twine upload --repository testpypi dist/*
            else
              echo "This is a release"
              echo "Would be Publishing ${{ github.event.release.tag_name }} to PyPI"
            fi
