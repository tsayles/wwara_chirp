# GitHub / PyPI integration
#
# This workflow will build a Python package, publish it to Test PyPI for pre-releases,
# and publish it to PyPI for releases.

name: PyPI workflow

on:
  release:
    # This workflow will run when a new release is published
    types: [released, prereleased]

jobs:

    test_build_and_publish_to_pypi:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Set up Python 3.10
          uses: actions/setup-python@v2
          with:
            python-version: '3.10'
        - name: Install dependencies
          run: |
              python -m pip install --upgrade pip
              python -m pip install flake8 pytest build twine
              if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

        - name: Set PYTHONPATH
          run: echo "PYTHONPATH=$(pwd)/src:$(pwd)/tests" >> $GITHUB_ENV
        - name: Lint with flake8
          run: |
              # stop the build if there are Python syntax errors or undefined names
              flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
              # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
              flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        - name: Test with pytest
          run: |
              cd tests
              echo
              pytest

        - name: Build
          run: |
            python -m build

        - name: Publish to Test PyPI or PyPI
          env:
            TWINE_USERNAME: __token__
          run: |
            if [[ ${{ github.event.release.prerelease }} == true ]]; then
              echo "This is a pre-release"
              echo "TWINE_PASSWORD=${{ secrets.TEST_PYPI_API_TOKEN }}" >> $GITHUB_ENV
              python -m twine upload --repository testpypi dist/*
            else
              echo "This is a release"
              echo "TWINE_PASSWORD=${{ secrets.PYPI_API_TOKEN }}" >> $GITHUB_ENV
              echo "Would be Publishing ${{ github.event.release.tag_name }} to PyPI"
        #      python -m twine upload --repository pypi dist/*
            fi

